syntax = "proto3";

package task_microservice;
option go_package="gen_proto/task_service";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

service ChallengeService {
  rpc GetChallengeById(GetChallengeRequest) returns (Challenge);
  rpc GetChallengesByUserId(GetChallengesRequest) returns (ChallengeList);
  rpc CreateChallenge(CreateChallengeRequest) returns (Challenge);
  rpc UpdateChallenge(UpdateChallengeRequest) returns (Challenge);
  rpc DeleteChallenge(DeleteChallengeRequest) returns (google.protobuf.Empty);
  rpc StartChallenge(StartChallengeRequest) returns (Challenge);
  rpc FinishChallenge(FinishChallengeRequest) returns (Challenge);
}

service TaskService {
  rpc GetTasksByChallengeId(GetTasksByChallengeIdRequest) returns (TaskList);
  rpc GetTaskById(GetTaskRequest) returns (Task);
  rpc GetTasksByChallengeIdAndDate(GetTaskByChallengeIdAndDateRequest) returns (TaskWithStatusList);
  rpc CreateTasks(CreateTasksRequest) returns (TaskList);
  rpc CreateTask(CreateTaskRequest) returns (Task);
  rpc UpdateTask(UpdateTaskRequest) returns (Task);
  rpc UpdateTaskStatus(UpdateTaskStatusRequest) returns (TaskWithStatus);
  rpc DeleteTask(DeleteTaskRequest) returns (google.protobuf.Empty);
}

// next id: 8
message Challenge {
  int64 id = 1;
  string title = 2;
  string description = 3;
  int64 user_id = 4;
  string status = 7;
}

// next id: 2
message GetChallengesRequest {
  int64 user_id = 1;
}

// next id: 2
message ChallengeList {
  repeated Challenge challenges = 1;
}

// next id: 6
message Task {
  int64 id = 1;
  string title = 2;
  string description = 3;
  int64 challenge_id = 5;
}

// next id: 4
message TaskWithStatus {
  Task task = 1;
  string status = 2;
  google.protobuf.Timestamp date = 3;
}

// next id: 2
message TaskWithStatusList {
  repeated TaskWithStatus task_with_statuses = 1;
}

// next id: 4
message GetTaskByChallengeIdAndDateRequest {
  int64 challenge_id = 1;
  google.protobuf.Timestamp date = 2;
  int64 user_id = 3;
}

// next id: 2
message TaskList {
  repeated Task tasks = 1;
}

// next id: 2
message CreateTasksRequest {
  repeated CreateTaskRequest task_requests = 1;
}

// next id: 6
message CreateChallengeRequest {
  string title = 1;
  string description = 2;
  int64 user_id = 3;
}

// next id: 7
message UpdateChallengeRequest {
  int64 id = 1;
  string title = 2;
  string description = 3;
  int64 user_id = 4;
}

// next id: 3
message StartChallengeRequest {
  int64 challenge_start = 1;
  int64 user_id = 2;
}

// next id: 3
message FinishChallengeRequest {
  int64 challenge_id = 1;
  int64 user_id = 2;
}

// next id: 3
message DeleteChallengeRequest {
  int64 id = 1;
  int64 user_id = 2;
}

// next id: 3
message GetChallengeRequest {
  int64 id = 1;
  int64 user_id = 2;
}

// next id: 3
message GetTasksByChallengeIdRequest {
  int64 challenge_id = 1;
  int64 user_id = 2;
}

// next id: 5
message CreateTaskRequest {
  string title = 1;
  string description = 2;
  int64 challenge_id = 3;
  int64 user_id = 4;
}

// next id: 6
message UpdateTaskRequest {
  int64 id = 1;
  string title = 2;
  string description = 3;
  int64 user_id = 4;
  int64 challenge_id = 5;
}

// next id: 4
message DeleteTaskRequest {
  int64 id = 1;
  int64 user_id = 2;
  int64 challenge_id = 3;
}

// next id: 4
message GetTaskRequest {
  int64 id = 1;
  int64 user_id = 2;
  int64 challenge_id = 3;
}

// next id: 6
message UpdateTaskStatusRequest {
  int64 task_id = 1;
  google.protobuf.Timestamp date = 2;
  string status = 3;
  int64 challenge_id = 4;
  int64 user_id = 5;
}